/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Mode } from "./utils/utils";
export { Mode } from "./utils/utils";
export namespace Components {
    interface MyButton {
        "disabled": boolean;
        /**
          * The mode refers to the feel of the button. This could reflect iOS specific behaviors, Android (MD) specific behaviors, or eventually web specific behaviors.  This demo only includes "md" and "ios" modes to align with Ionic Framework.
         */
        "mode": Mode;
        /**
          * The theme determines which styles to use.
         */
        "theme"?: "ios" | "md" | "os";
    }
}
declare global {
    interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {
    }
    var HTMLMyButtonElement: {
        prototype: HTMLMyButtonElement;
        new (): HTMLMyButtonElement;
    };
    interface HTMLElementTagNameMap {
        "my-button": HTMLMyButtonElement;
    }
}
declare namespace LocalJSX {
    interface MyButton {
        "disabled"?: boolean;
        /**
          * The mode refers to the feel of the button. This could reflect iOS specific behaviors, Android (MD) specific behaviors, or eventually web specific behaviors.  This demo only includes "md" and "ios" modes to align with Ionic Framework.
         */
        "mode"?: Mode;
        /**
          * The theme determines which styles to use.
         */
        "theme"?: "ios" | "md" | "os";
    }
    interface IntrinsicElements {
        "my-button": MyButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-button": LocalJSX.MyButton & JSXBase.HTMLAttributes<HTMLMyButtonElement>;
        }
    }
}
